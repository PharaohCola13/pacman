[
["index.html", "pacviz About", " pacviz Spencer Riley last revised on 2020-08-18 About This is the documentation of the pacviz package. Examples in the book are generated under version 1.0.0.0. Session info: "],
["introduction-to-the-package.html", "Chapter 1 Introduction to the package 1.1 Installation Guide 1.2 Package Dependencies", " Chapter 1 Introduction to the package See the pacviz documentation page for more information: https://pharaohcola13.github.io/pacviz/book/. The functions that are enclosed in this package include: pacman 1.1 Installation Guide For the most up-to-date version of the package, install it directly from GitHub. devtools::install_github(&quot;PharaohCola13/pacviz&quot;) Through CRAN install.package(&#39;pacviz&#39;) 1.2 Package Dependencies GlobalOptions, shape, colorspace, circlize, plotrix "],
["pac-man-residual-plot.html", "Chapter 2 Pac-Man Residual Plot 2.1 Recommendations 2.2 Usage 2.3 Examples", " Chapter 2 Pac-Man Residual Plot The results of a regression algorithm typically takes the form of a residual plot, showing the relationship (or lack thereof) between the domain and the residual values of the data associated with the model. From the residual, the performance of the model can be determined. pacviz contributes a novel approach for looking at the broad view performance of the regression model by constructing a ‘Pac-Man’ residual plot. This visualization technique applies a bijective map from the domain of the data to angular values between 40 and 320 degrees, \\[\\begin{equation} X: \\rightarrow [40, 320]\\, . \\end{equation}\\] This restriction is applied to allow space for radial labels. By taking the absolute value of the residual values on the radial coordinate system, we can observe the overall performance of the model with relative ease. There are shortcomings for a visualization that views big-picture components of a model. In the case of the ‘Pac-Man’ residual plot we lose the ability to determine the dependence of the relationship. Through a traditional residual plot, it would be simple to determine if there was systematic or random error based on the relationship between the standard deviation and the domain of the data. 2.1 Recommendations The discussions in this section will revolve around preferred color schemes and helpful character codes for UTF-8 symbols that can be used as units. 2.1.1 Color Scheme Since one of the two colors in the visualization is white, the other is a user input with the default being gold. The following colors are predefined in R, with the whole list available here, and are a good fit in terms of contrast and readability. lightskyblue lightsteelblue darksalmon palegreen gray86 plum 2.1.2 Characters Angstrom: \\uc5 More will be added 2.2 Usage pacman( x,y, title, unit, axis_label, model = lm(y ~ x, data = data.frame(x, y)), color1 = &quot;Yellow&quot;, standardize = FALSE ) 2.3 Examples For the following examples, the domain and range that will be processed by the function will be: x &lt;- rnorm(20, mean=0, sd=10) y &lt;- log(rnorm(20, mean=0, sd=10), base=exp(1)) It should be noted that these values do change after every run. 2.3.1 Example 1 In the below snippet, we use # Generic Pac-Man residual pacman(x,y,&#39;Example 1&#39;, &#39;units&#39;, &#39;Axis Label&#39;) 2.3.2 Example 2 # Pac-Man residual using alternate color, # residual standardization, and temperature units pacman(x,y, &#39;Example 2&#39;, &#39;degC&#39;, &quot;Temperature&quot;, color1=&quot;lightblue&quot;, standardize=TRUE) 2.3.3 Example 3 # Pac-Man residual using alternate color, # a quadratic model, and a UTF8 character for units pacman(x,y, &#39;Example 3&#39;, &quot;\\uc5&quot;, &quot;Distance&quot;, model=lm(y~poly(x,2)), color1=&quot;darksalmon&quot;) "],
["releases.html", "Chapter 3 Releases", " Chapter 3 Releases "]
]
